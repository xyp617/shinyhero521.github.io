<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Health]]></title>
    <url>%2F2018%2F01%2F02%2F%E5%81%A5%E5%BA%B7%2F</url>
    <content type="text"><![CDATA[我最爱的人的缩写 Decrypt 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]]></content>
      <categories>
        <category>diary</category>
      </categories>
      <tags>
        <tag>health</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[含visio的office2013]]></title>
    <url>%2F2017%2F12%2F10%2Foffice2013%EF%BC%88%E5%90%ABvisio%EF%BC%89%E5%85%A8%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[office（零售版）和visio（VOL版）链接：https://pan.baidu.com/s/1o8qpzcu 密码：cqpu office（零售版）转VOL版链接： https://share.weiyun.com/fceb1de31219bb309fb7f7def9080b49 （密码：Cnep）使用方法 VOL版office破解链接： https://share.weiyun.com/4caf3a48a0433166e3bc92c40f19e1cf （密码：2Zaf）使用方法]]></content>
      <categories>
        <category>实用工具</category>
      </categories>
      <tags>
        <tag>office2013</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown示例]]></title>
    <url>%2F2017%2F10%2F13%2Fmarkdown%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C%2F</url>
    <content type="text"><![CDATA[粗体1**马克飞象** 马克飞象 突出1`Ctrl + /` Ctrl + / 列表12- 第一项- 第二项 第一项 第二项 引用1&gt; 三人行必有吾师。 —— [孔子](http://baike.baidu.com/) 三人行必有吾师。 —— 孔子 折叠1&lt;!-- more --&gt; 代码12```Javascriptvar emp = &#123; name:"Frank", age:45 &#125;; 1```Python 1```Java 表格 Item 价格 数量 Computer 5600 5 Phone 120 12 Pipe 10 234 流程图 以及时序图:123客户端-&gt;服务端: 给我姓名叫张三的员工信息Note right of 服务端: 服务端响应服务端--&gt;客户端: 给你张三的信息 LaTeX 公式可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式： $$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$ st=>start: 开始 e=>end: 结束 op1=>operation: 准备数据 op2=>operation: 计算处理 cond1=>condition: 是否正确? st->op1->op2->cond1 cond1(yes)->e cond1(no)->op1{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vocabulary]]></title>
    <url>%2F2017%2F10%2F12%2F%E5%8D%95%E8%AF%8D%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[包名：全部小写，如包名“com.sina.crm”。 变量名：第1个单词首字母小写，其后单词首字母大写。变量名应简单、易于描述，尽量不要以美元符号和下画线开，如变量名“name”、“myHeight”。 方法名：第1个单词小写，以后每个单词首字母大写，例如方法名“getName”。 类名或接口名：每个单词首字母大写，应使用简洁且富于描述的完整名词，不要使用缩写词，如类名“MyData”，接口名“RowSet”。 常量：全大写，用下画线“_”来分隔每个单词，例如“MIN_WIDTH”。 简单的说，就是包名全小写，变量名和方法、类名和接口名 非首字母都大写，但是变量名和方法名首字母小写 123456patchy英 [&apos;pætʃɪ] 美 [&apos;pætʃi]adj. 不调和的；拼凑成的；有补丁的比较级patchier最高级patchiest]]></content>
      <categories>
        <category>vocabulary</category>
      </categories>
      <tags>
        <tag>vocabulary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Smack+Spark项目测试]]></title>
    <url>%2F2017%2F08%2F30%2FSmack%2BSpark%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[每一个你不满意的现在，都有一个你没有努力的曾经。 Java领域的IM解决方案Java领域的即时通信的解决方案可以考虑openfire+spark+smack。当然也有其他的选择。 什么是XMPP？Extensible Messaging and Presence Protocol，简单的来讲，它就是一个发送接收处理消息的协议，但是这个协议发送的消息，既不是二进制的东东也不是字符串，而是XML。正是因为使用了XML作为消息传递的中介，Extensible 才谈的上，不是么？ 什么是IM ？ Instant Messenger，及时通信软件，就是大家使用的QQ、MSN Messenger和Gtalk等等。其中Gtalk 就是基于XMPP 协议的一个实现，其他的则不是。当前IM 几乎作为每个上网者必然使用的工具，在国外的大型企业中有一些企业级的IM应用，但是其商业价值还没完全发挥出来。设想既然XMPP 协议是一个公开的协议，那么每个企业都可以利用它来开发适合本身企业工作，提高自身生产效率的IM；甚至，你还可以在网络游戏中集成这种通信软件，不但让你可以边游戏边聊天，也可以开发出适合游戏本身的IM 应用，比如说一些游戏关键场景提醒功能，团队语音交流等等都可以基于IM来实现。说了这么多，就是一个意思，其商业价值远远比你想的高！Spark Smack 和 Openfire 开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。包括服务器端——Openfire，客户端——Spark，XMPP 传输协议的实现——Smack（记住，XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用）。三者都是基于Java 语言的实现，因此对于熟悉Java 的开发者来说不是很难 Spark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低 Openfire 是基于XMPP 协议的IM 的服务器端的一个实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。Openfire 也提供了一些基本功能，但真的很基本的！庆幸的是，它也提供插件的扩展，像Spark 一样，我同样强烈建议使用插件扩展的方式来增加新的功能，而不是修改人家的源代码。 Smack 是一个XMPP 协议的Java 实现，提供一套可扩展的API 下图展示了三者之间的关系： 安装openfire安装spark客户端]]></content>
      <categories>
        <category>XMPP</category>
      </categories>
      <tags>
        <tag>XMPP</tag>
        <tag>Smack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[XMPP]]></title>
    <url>%2F2017%2F08%2F29%2FXMPP%2F</url>
    <content type="text"><![CDATA[XMPP（Extensible Messaging and Presence Protocol，前称Jabber）是一种以XML为基础的开放式即时通信协议 运作方式XMPP网络是基于服务器的（即客户端之间彼此不直接交谈），但是也是分布式的。不像AOL即时通或MSN Messenger等服务，XMPP没有中央官方服务器。Jabber.org的公众服务器上有大量的用户，所以有些人误解了，以为它是官方服务器，不过事实上任何人都可以在自己的网域上运行XMPP服务器。 Jabber识别符（JID）是用户登录时所使用的账号，看起来通常像一个电子邮件地址，如someone@example.com；前半部分为用户名，后半部分为XMPP服务器域名，两个字段以@符号区隔。 举例说明假设朱丽叶（juliet@capulet.com）想和罗密欧（romeo@montague.net）通话，他们两人的账号分别在Capulet.com及Montague.net的服务器上。当朱丽叶输入消息并按下发送钮之后，一连串的事件就发生了：朱丽叶的XMPP客户端将她的消息发送到Capulet.com XMPP服务器。Capulet.com XMPP服务器打开与Montague.net XMPP服务器的连接。Montague.net XMPP服务器将消息寄送给罗密欧。如果他目前不在在线，那么存储消息以待稍后寄送。罗密欧与朱丽叶两人的XMPP服务是由两家不同的业者所提供的，而他们彼此传讯时，不须拥有对方服务器的账号，也不须成为对方业者的会员。 Smack]]></content>
      <categories>
        <category>XMPP</category>
      </categories>
      <tags>
        <tag>XMPP</tag>
        <tag>Smack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F08%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hello world</category>
      </categories>
      <tags>
        <tag>hello world</tag>
      </tags>
  </entry>
</search>
